version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:tools-deps-1.10.1.478

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6
        environment:
                - POSTGRES_USER: postgres
                - POSTGRES_DB: ctest

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      - run: sudo apt-get update && sudo apt-get install postgresql-client

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: install geckodriver
          command: |
              wget https://github.com/mozilla/geckodriver/releases/download/v0.19.1/geckodriver-v0.19.1-linux64.tar.gz
              sudo sh -c 'tar -x geckodriver -zf geckodriver-v0.19.1-linux64.tar.gz -O > /usr/bin/geckodriver'
              sudo chmod +x /usr/bin/geckodriver

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "deps.edn" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: clojure -Sforce -Stree

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          command: |
            psql -h localhost -p 5432 -U postgres -c "create database ctest_test;"
            psql -h localhost -p 5432 -U postgres -c "create user ctest with password 'ctest';"
            psql -h localhost -p 5432 -U postgres -c "alter user ctest with superuser;"
            psql -h localhost -p 5432 -U postgres -c "grant all privileges on database ctest_test to ctest;"

      - run: clojure -A:jar
      - run: ls
      - run: clojure -A:install

      - run: clojure -Sdeps '{:deps {seancorfield/clj-new {:mvn/version "0.8.5"}}}' -m clj-new.create closp de/sveri/ctest

      - run: |
          cd ctest
          clojure -A:jar

      - run: cd ctest && clojure -A:test